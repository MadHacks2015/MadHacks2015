

module.exports = {
	createApplications:function( callback ){
		global.db.run('CREATE TABLE "applications" ("firstname" BLOB, "lastname" BLOB, "email" BLOB PRIMARY KEY  NOT NULL  UNIQUE , "password" BLOB NOT NULL , "swag_size" BLOB, "is_18" BOOL, "attend_school" BOOL, "school" BLOB, "state" BLOB, "country" BLOB, "city" BLOB, "zip" INTEGER, "travel" BOOL, "venmo" BLOB, "food_vegetarian" BOOL, "food_vegan" BOOL, "food_glutenfree" BOOL, "food_pescetarian" BOOL, "food_dairyfree" BOOL, "food_kosher" BOOL, "food_halal" BOOL, "food_other" BLOB, "Github" BLOB, "linkedIn" BLOB, "Dribble" BLOB, "exposure" BLOB, "plan_hardware" BOOL, "plan_hardware_on" BLOB, "plan_mentee" BOOL, "plan_mentor" BOOL, "need_partner" BOOL, "plan_need_partner_skills" BLOB, "resume" BLOB);', function(err){
			callback(err);
		});
	},
	updateApplication:function(req, user, callback){
		var hash = global.bcrypt.hashSync(user.password);

		var query = 'UPDATE applications'
		query += ' SET '
			+  'firstname="' + user.firstname + '"'
			+ ',lastname="' + user.lastname + '"'
			+ ',email="' + user.email.toLowerCase() + '"'
			+ ',password="' + hash + '"'
			+ ',swag_size="' + user.swag_size + '"'
			+ ',is_18="' + ((user.is_18 == "true") ? true : false) + '"'
			+ ',attend_school="' + ((user.attend_school == "true") ? true : false) + '"'
			+ ',school="' + user.school + '"'
			+ ',state="' + user.state + '"'
			+ ',country="' + user.country + '"'
			+ ',city="' + user.city + '"'
			+ ',zip="' + user.zip + '"'
			+ ',travel="' + ((user.travel === 'true') ? true : false) + '"'
			+ ',venmo="' + user.venmo + '"'
			+ ',food_vegetarian="' + ((user.food_vegetarian == "true") ? true : false) + '"'
			+ ',food_vegan="' + ((user.food_vegan == "true") ? true : false) + '"'
			+ ',food_glutenfree="' + ((user.food_glutenfree == "true") ? true : false) + '"'
			+ ',food_pescetarian="' + ((user.food_pescetarian == "true") ? true : false) + '"'
			+ ',food_dairyfree="' + ((user.food_dairyfree == "true") ? true : false) + '"'
			+ ',food_kosher="' + ((user.food_kosher == "true") ? true : false) + '"'
			+ ',food_halal="' + ((user.food_halal == "true") ? true : false) + '"'
			+ ',food_other="' + user.food_other + '"'
			+ ',Github="' + user.Github + '"'
			+ ',linkedIn="' + user.linkedIn + '"'
			+ ',Dribble="' + user.Dribble + '"'
			+ ',exposure="' + user.exposure + '"'
			+ ',plan_hardware="' + ((user.plan_hardware == "true") ? true : false) + '"'
			+ ',plan_hardware_on="' + user.plan_hardware_on + '"'
			+ ',plan_mentee="' + ((user.plan_mentee == "true") ? true : false) + '"'
			+ ',plan_mentor="' + ((user.plan_mentor == "true") ? true : false) + '"'
			+ ',need_partner="' + ((user.need_partner == "true") ? true : false) + '"'
			+ ',plan_need_partner_skills="' + user.plan_need_partner_skills + '"'
			+ ',resume="' + user.resume + '"'
			+ 'WHERE email="'+req.signedCookies.user+'";';
		global.db.run(query, function(err) {
			if(err){
				console.log(err);
				if(err.errno == 19)
					callback({err:"exists"})
				else
					callback({err:"sql"});
			}else{
				callback(null);
			}
		});
	},
	insertApplication:function(user, callback){
		var hash = global.bcrypt.hashSync(user.password);

		var query = 'INSERT INTO applications ("firstname","lastname","email","password","swag_size","is_18","attend_school","school","state","country","city","zip","travel","venmo","food_vegetarian","food_vegan","food_glutenfree","food_pescetarian","food_dairyfree","food_kosher","food_halal","food_other","Github","linkedIn","Dribble","exposure","plan_hardware","plan_hardware_on","plan_mentee","plan_mentor","need_partner","plan_need_partner_skills","resume")'
		query += ' VALUES ('
			+  ' "' + user.firstname + '"'
			+ ', "' + user.lastname + '"'
			+ ', "' + user.email.toLowerCase() + '"'
			+ ', "' + hash + '"'
			+ ', "' + user.swag_size + '"'
			+ ', "' + ((user.is_18 == 'true') ? true : false) + '"'
			+ ', "' + ((user.attend_school == 'true') ? true : false) + '"'
			+ ', "' + user.school + '"'
			+ ', "' + user.state + '"'
			+ ', "' + user.country + '"'
			+ ', "' + user.city + '"'
			+ ', "' + user.zip + '"'
			+ ', "' + ((user.travel === 'true') ? true : false) + '"'
			+ ', "' + user.venmo + '"'
			+ ', "' + ((user.food_vegetarian == 'true') ? true : false) + '"'
			+ ', "' + ((user.food_vegan == 'true') ? true : false) + '"'
			+ ', "' + ((user.food_glutenfree == 'true') ? true : false) + '"'
			+ ', "' + ((user.food_pescetarian == 'true') ? true : false) + '"'
			+ ', "' + ((user.food_dairyfree == 'true') ? true : false) + '"'
			+ ', "' + ((user.food_kosher == 'true') ? true : false) + '"'
			+ ', "' + ((user.food_halal == 'true') ? true : false) + '"'
			+ ', "' + user.food_other + '"'
			+ ', "' + user.Github + '"'
			+ ', "' + user.linkedIn + '"'
			+ ', "' + user.Dribble + '"'
			+ ', "' + user.exposure + '"'
			+ ', "' + ((user.plan_hardware == 'true') ? true : false) + '"'
			+ ', "' + user.plan_hardware_on + '"'
			+ ', "' + ((user.plan_mentee == 'true') ? true : false) + '"'
			+ ', "' + ((user.plan_mentor == 'true') ? true : false) + '"'
			+ ', "' + ((user.need_partner == 'true') ? true : false) + '"'
			+ ', "' + user.plan_need_partner_skills + '"'
			+ ', "' + user.resume + '"'
			+ ');';
		global.db.run(query, function(err) {
			if(err){
				console.log(err);
				if(err.errno == 19)
					callback({err:"exists"})
				else
					callback({err:"sql"});
			}else{
				callback(null);
			}
		});
	},
	createAnon: function(callback){
		global.db.run('CREATE TABLE "anon" ("state" BLOB, "age" BLOB, "degree" BLOB, "education" BLOB, "gender" BLOB, "ethnicity" BLOB, "parent_education" BLOB, "background" BLOB);', function(err){
			callback(err);
		});
	},
	insertAnon: function(data, callback){
		var query = 'INSERT INTO anon ("state","age","degree","education","gender","ethnicity","parent_education","background")'
			query += ' VALUES ('
				+  ' "' + data.state + '"'
				+ ', "' + data.age + '"'
				+ ', "' + data.degree + '"'
				+ ', "' + data.education + '"'
				+ ', "' + data.gender + '"'
				+ ', "' + data.ethnicity + '"'
				+ ', "' + data.parent_education + '"'
				+ ', "' + data.background + '"'
				+ ');';
		global.db.run(query, function(err) {
			if(err)
				console.log(err);
			callback(err);
		});
	},
	checkLogin: function(user, callback){
		var query = "SELECT password FROM applications WHERE email='"+user.email.toLowerCase()+"';";
		global.db.get(query, function(err, data){
			if(err || data==undefined){
				callback(err, false)
				console.log(err, data);
			}else{
				console.log("data",data, "password", user.password);
				var isMatch = global.bcrypt.compareSync(user.password, data.password);
				callback(null, isMatch);
			}
		});
	},
	getUser: function(req, callback){
		try{
			var query = "SELECT * FROM applications WHERE email='"+req.signedCookies.user.toLowerCase()+"';";
			global.db.get(query, function(err, user){
				if(user != undefined){
					for(var key in user)
						if(user[key] == undefined)
							user[key] = '';
					user.password = '';
				}
				callback(err, user);
			});
		}catch(e){
			callback({error:"not logged"}, undefined);
		}
	}
};


